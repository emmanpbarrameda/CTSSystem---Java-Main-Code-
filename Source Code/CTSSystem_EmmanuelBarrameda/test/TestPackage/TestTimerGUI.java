// ©  M A D E		B Y		E M M A N		B A R R A M E D A  © //
//CTS System
package TestPackage;

import jaco.mp3.player.MP3Player;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author Emmanuel Peñaflorida Barrameda
 */
public final class TestTimerGUI extends javax.swing.JFrame {

    /**
     * Creates new form TestTimerGUI
     */
    Timer timer;
    String recordString = "Recorded Time:";
    int count = 0;
    int min, min1;
    int sec = 1;
    int sec1 = 1;
    boolean flag = true;
    boolean ifStop = false;

    public static final String Onemin = "C:/Users/DELL/Music/Shania Twain - Youre Still the One (Drum Cover).mp3";
    MP3Player OneMinMp3 = new MP3Player(new File(Onemin));

    public TestTimerGUI() {
        initComponents();
        setTime();
        btnReset.setVisible(false);
        btnRestart.setVisible(false);
        btnRecord.setVisible(false);
        recordBoard.setVisible(false);
        btnResetRecordTime.setVisible(false);
        recordboardScroll.setVisible(false);
        //lblMin.setFont(new Font("Digital-7 Mono", Font.BOLD, 46));

    }

    public void setTime() {
        //minute

        cbMin.updateUI();
        cbSec.updateUI();

        for (int i = 0; i < 61; i++) {
            if (i < 10) {
                cbMin.addItem("0" + i);
            } else {
                cbMin.addItem("" + i);
            }
        }

        //sec
        for (int i = 0; i < 60; i++) {
            if (i < 10) {
                cbSec.addItem("0" + i);
            } else {
                cbSec.addItem("" + i);
            }
        }
    }

    public void Last1MinuteVoid() {
        try {
            InputStream inputStream = getClass().getResourceAsStream("/soundeffects/sound.wav");
            AudioStream audioStream = new AudioStream(inputStream);
            AudioPlayer.player.start(audioStream);
        } catch (IOException e) {
        }
    }

    public void record() {
        count++;
        recordString += "\n" + count + "] " + lblMin.getText() + ":" + lblSec.getText() + " ";
        recordBoard.setText(recordString);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnStop = new javax.swing.JButton();
        lblSec = new javax.swing.JLabel();
        cbSec = new javax.swing.JComboBox<>();
        btnStart = new javax.swing.JButton();
        cbMin = new javax.swing.JComboBox<>();
        lblMin = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRestart = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        recordboardScroll = new javax.swing.JScrollPane();
        recordBoard = new javax.swing.JTextArea();
        btnRecord = new javax.swing.JButton();
        btnResetRecordTime = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnStop.setText("Stop");
        btnStop.setEnabled(false);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        lblSec.setText("00");

        cbSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSecActionPerformed(evt);
            }
        });

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        cbMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMinActionPerformed(evt);
            }
        });

        lblMin.setText("00");

        jLabel2.setText(":");

        btnRestart.setText("Restart");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        recordBoard.setColumns(20);
        recordBoard.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        recordBoard.setRows(5);
        recordBoard.setBorder(null);
        recordboardScroll.setViewportView(recordBoard);

        btnRecord.setText("Record");
        btnRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecordActionPerformed(evt);
            }
        });

        btnResetRecordTime.setText("Reset Recorded Time");
        btnResetRecordTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetRecordTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(lblMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSec))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(104, 104, 104)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnStart)
                                            .addComponent(cbMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(96, 96, 96)
                                        .addComponent(btnRestart)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnReset)
                                        .addGap(37, 37, 37)
                                        .addComponent(btnRecord))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cbSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnStop)))))
                        .addGap(192, 192, 192))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnResetRecordTime)
                            .addComponent(recordboardScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMin)
                    .addComponent(jLabel2)
                    .addComponent(lblSec))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnStop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRestart)
                    .addComponent(btnReset)
                    .addComponent(btnRecord))
                .addGap(43, 43, 43)
                .addComponent(recordboardScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnResetRecordTime)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 460));

        setSize(new java.awt.Dimension(668, 494));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMinActionPerformed
        lblMin.setText("" + cbMin.getSelectedItem());
        min = Integer.parseInt(lblMin.getText());
    }//GEN-LAST:event_cbMinActionPerformed

    private void cbSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSecActionPerformed
        lblSec.setText("" + cbSec.getSelectedItem());
        sec = Integer.parseInt(lblSec.getText());
    }//GEN-LAST:event_cbSecActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed

        if (lblMin.getText().equals("00") && lblSec.getText().equals("00")) {
            JOptionPane.showMessageDialog(null, "Please a select time.");
        } else {
            //START TIMER CODE
            btnStart.setEnabled(false);
            btnStart.setText("Continue");
            btnStop.setEnabled(true);
            btnStop.setText("Pause");

            cbMin.setEnabled(false);
            cbSec.setEnabled(false);

            btnReset.setVisible(true);
            btnRestart.setVisible(true);
            btnRestart.setEnabled(true);

            btnRecord.setVisible(true);
            btnRecord.setEnabled(true);
            recordBoard.setVisible(true);
            recordboardScroll.setVisible(true);
            btnResetRecordTime.setVisible(true);
            btnResetRecordTime.setEnabled(false);

            timer = new Timer(1000, (new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {

                    lblMin.setForeground(Color.BLACK);
                    lblSec.setForeground(Color.BLACK);

                    if (ifStop) {
                        min = min1;
                        sec = sec1;
                        ifStop = false;
                    }

                    if (sec == 0) {
                        sec = 60;
                        min--;
                    }

                    if (min == 0) {
                        lblMin.setForeground(Color.RED);
                        lblSec.setForeground(Color.RED);

                    }

                    //last 1 minute
                    if (min == 1 && sec == 01) {
                        //Last1MinuteVoid();
                    }

                    if (min < 0) {
                        JOptionPane.showMessageDialog(rootPane, "Times Up", "Stopped!", 0);
                        timer.stop();
                        setTime();
                        min = 0;
                        sec = 1;
                        cbSec.setSelectedItem("00");
                        cbMin.setSelectedItem("00");

                        btnStart.setEnabled(true);
                        btnStart.setText("Start");
                        btnStop.setEnabled(false);
                        btnStop.setText("Stop");

                        btnReset.setVisible(false);
                        btnRestart.setVisible(false);

                        cbMin.setEnabled(true);
                        cbSec.setEnabled(true);

                        btnRecord.setVisible(true);
                        btnRecord.setEnabled(false);
                        recordBoard.setVisible(true);
                        recordboardScroll.setVisible(true);
                        btnResetRecordTime.setVisible(true);
                        btnResetRecordTime.setEnabled(true);

                    } else {
                        sec--;

                        if (sec < 10) {
                            //last 10 seconds here
                            lblSec.setText("0" + sec);

                            //System.out.println("Sec: "+sec);
                            //vc = vm.getVoice("kevin16");
                            //vc.allocate();
                            //vc.setVolume(100);
                            //vc.speak(""+sec);
                            flag = false;
                        }
                        if (min < 10) {
                            lblMin.setText("0" + min);
                            if (sec < 10) {
                                lblSec.setText("0" + sec);
                            } else {
                                lblSec.setText("" + sec);
                            }
                            System.out.println("Sec: " + sec);
                            flag = false;
                        }
                        if (flag) {
                            lblMin.setText("" + min);
                            lblSec.setText("" + sec);
                        }
                    }
                }
            }));
            timer.start();
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        min1 = min;
        sec1 = sec;
        ifStop = true;
        timer.stop();

        btnStart.setEnabled(true);
        btnStart.setText("Continue");

        btnStop.setEnabled(false);
        btnStop.setText("Pause");

        btnRestart.setEnabled(false);

        btnRecord.setVisible(true);
        recordBoard.setVisible(true);
        recordboardScroll.setVisible(true);
        btnResetRecordTime.setVisible(true);
        btnResetRecordTime.setEnabled(false);

    }//GEN-LAST:event_btnStopActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        timer.stop();
        timer.stop();
        setTime();
        min = 0;
        sec = 1;
        cbSec.setSelectedItem("00");
        cbMin.setSelectedItem("00");

        btnStart.setEnabled(true);
        btnStart.setText("Start");
        btnStop.setEnabled(false);
        btnStop.setText("Stop");

        btnReset.setVisible(false);
        btnRestart.setVisible(false);

        cbMin.setEnabled(true);
        cbSec.setEnabled(true);

        btnRecord.setVisible(true);
        btnRecord.setEnabled(false);
        recordBoard.setVisible(true);
        recordboardScroll.setVisible(true);
        btnResetRecordTime.setVisible(true);
        btnResetRecordTime.setEnabled(true);

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed

        timer.stop();
        timer.stop();
        setTime();
        min = Integer.parseInt((String) cbMin.getSelectedItem());
        sec = 1 + Integer.parseInt((String) cbSec.getSelectedItem());
        //cbSec.setSelectedItem("00");
        //cbMin.setSelectedItem("00");

        btnStart.setEnabled(true);
        btnStart.setText("Start");
        btnStop.setEnabled(false);
        btnStop.setText("Stop");

        btnReset.setVisible(false);
        btnRestart.setVisible(false);

        //cbMin.setEnabled(true);
        //cbSec.setEnabled(true);
        btnRecord.setVisible(true);
        recordBoard.setVisible(true);
        recordboardScroll.setVisible(true);
        btnResetRecordTime.setVisible(true);
        btnResetRecordTime.setEnabled(false);

        btnStart.doClick();
    }//GEN-LAST:event_btnRestartActionPerformed

    private void btnRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecordActionPerformed
        record();
    }//GEN-LAST:event_btnRecordActionPerformed

    private void btnResetRecordTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetRecordTimeActionPerformed
        recordString = "Recorded Time:";
        recordBoard.setText("");
        recordBoard.repaint();
        count = 0;
    }//GEN-LAST:event_btnResetRecordTimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestTimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TestTimerGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRecord;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnResetRecordTime;
    private javax.swing.JButton btnRestart;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox<String> cbMin;
    private javax.swing.JComboBox<String> cbSec;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel lblMin;
    public javax.swing.JLabel lblSec;
    private javax.swing.JTextArea recordBoard;
    private javax.swing.JScrollPane recordboardScroll;
    // End of variables declaration//GEN-END:variables
}
